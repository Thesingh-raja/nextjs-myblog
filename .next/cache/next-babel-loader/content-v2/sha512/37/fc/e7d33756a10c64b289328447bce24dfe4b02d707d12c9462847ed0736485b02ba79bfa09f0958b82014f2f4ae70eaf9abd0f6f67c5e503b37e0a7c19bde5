{"ast":null,"code":"import { MongoClient } from 'mongodb';\n\nasync function handler(req, res) {\n  if (req.method === 'POST') {\n    const {\n      email,\n      name,\n      message\n    } = req.body;\n\n    if (!email || !email.includes('@') || !name || name.trim() === '' || !message || message.trim() === '') {\n      res.status(422).json({\n        message: 'Invalid input.'\n      });\n      return;\n    }\n\n    const newMessage = {\n      email,\n      name,\n      message\n    };\n    let client;\n    const connectionString = `mongodb+srv://${process.env.mongo_user}:${process.env.mongo_password}@${process.env.mongo_cluster}.v136z.mongodb.net/${process.env.mongo_db}?retryWrites=true&w=majority`;\n\n    try {\n      console.log('hi');\n      client = await MongoClient.connect(connectionString, {\n        useNewUrlParser: true,\n        useUnifiedTopology: true\n      });\n      console.log(client);\n    } catch (error) {\n      console.log(error);\n      res.status(500).json({\n        message: 'Could not connect to database.'\n      });\n      return;\n    }\n\n    const db = client.db();\n\n    try {\n      const result = await db.collection('messages').insertOne(newMessage);\n      newMessage.id = result.insertedId;\n    } catch (error) {\n      client.close();\n      res.status(500).json({\n        message: 'Storing message failed!'\n      });\n      return;\n    }\n\n    client.close();\n    res.status(201).json({\n      message: 'Successfully stored message!',\n      message: newMessage\n    });\n  }\n}\n\nexport default handler;","map":null,"metadata":{},"sourceType":"module"}